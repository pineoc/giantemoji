
def ofRoot(){ return '/Users/pineoc/Downloads/of/' }

// Load common functions
apply from: ofRoot()+"libs/openFrameworksCompiled/project/android/common-functions.gradle"


// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle-experimental:0.7.0'
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

apply plugin: 'com.android.model.application'
model {
    android {
        compileSdkVersion = 19
        buildToolsVersion = "23.0.3"

        defaultConfig.with {
            minSdkVersion.apiLevel    = 19
            targetSdkVersion.apiLevel = 19
            versionCode     =  1
            versionName     = "1.0"
        }
    }

    android.ndk {
        moduleName = ofAppModuleName()
        toolchain  = buildToolchain()
        stl        = compilerStl()
    }

    android.sources {
        main {
            manifest.source {
                srcDir '.'
                include 'AndroidManifest.xml'
            }
            jni {
                source {
                    srcDirs= appSrcDirs(ofRoot())

                    includes = srcIncludes(ofRoot())
                    excludes = srcExcludes(ofRoot())
                }

                // Link to openFrameworks
                dependencies {
                    project ":openFrameworksProject"  linkage "static"
                }
            }

            java.source.srcDirs = ['srcJava']
            resources.source.srcDirs = ['srcJava']
            aidl.source.srcDirs = ['srcJava']
            renderscript.source.srcDirs = ['srcJava']
            res.source.srcDirs = ['res']
            jniLibs.source.srcDirs = ['libs']

            // Add app assets
            assets.source.srcDirs += 'assets'

            // SVM Model
            assets.source.srcDirs += 'svmModel'

            // Add web source
            assets.source.srcDirs += '../gmojiWeb/src'

            // Add addon data
            assets.source.srcDirs += addonData(ofRoot())
        }
    }

    android.lintOptions {
        abortOnError  = false
    }

    android.buildTypes {
        release {
            minifyEnabled = false
        }
    }

    // Setup the different types of flavors (arm / x86),
    // and add linker flags based on that
    android.productFlavors {
        getAbis().each { abi ->
            create(getFlavorName(abi)) {
                ndk {
                    abiFilters.add(abi)

                    cppFlags.addAll(coreCppFlags(abi, ofRoot()))
                    cppFlags.addAll(addonCppFlags(abi, ofRoot()))
                    cppFlags.add("-O2")

                    ldLibs.addAll(coreLdLibs(abi, ofRoot()))
                    ldLibs.addAll(addonLdLibs(abi, ofRoot()))

                    ldFlags.addAll(coreLdFlags(abi, ofRoot()))
                    ldFlags.addAll(addonLdFlags(abi, ofRoot()))
                }
            }
        }
    }

    android.aaptOptions {
        /// Uncomment this line to ignore the large .dat file used by ofxFaceTracker2
        /// for faster dev build tie
        // ignoreAssetsPattern '*.dat'
    }
}


dependencies {
    addonJavaDependencies(ofRoot()).each { dep ->
        compile(project(path: dep[1] ))
    }
    compile project(path: ':ofAndroidLib')
    compile 'com.github.nkzawa:socket.io-client:0.3.0'
}
